$date
	Wed Oct 17 14:25:48 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_1bit_tb $end
$var wire 1 ! cout $end
$var wire 1 " result $end
$var reg 1 # a $end
$var reg 4 $ aluop [3:0] $end
$var reg 1 % b $end
$var reg 1 & cin $end
$scope module a1 $end
$var wire 1 ' a $end
$var wire 1 ( ain $end
$var wire 4 ) aluop [3:0] $end
$var wire 1 * aout $end
$var wire 1 + b $end
$var wire 1 , bin $end
$var wire 1 - bout $end
$var wire 1 . cin $end
$var wire 1 ! cout $end
$var wire 1 / k1 $end
$var wire 1 0 k2 $end
$var wire 1 1 l1 $end
$var wire 1 2 l2 $end
$var wire 1 3 r2in $end
$var wire 1 4 r3in $end
$var wire 1 " result $end
$var wire 1 5 u1 $end
$var wire 1 6 u2 $end
$var wire 1 7 u3 $end
$var wire 1 8 w1 $end
$var wire 1 9 w2 $end
$var wire 1 : w3 $end
$scope module q2 $end
$var wire 1 ! c $end
$var wire 1 ; c1 $end
$var wire 1 < c2 $end
$var wire 1 . cin $end
$var wire 1 * op1 $end
$var wire 1 - op2 $end
$var wire 1 : s $end
$var wire 1 = s1 $end
$scope module ha1 $end
$var wire 1 * a $end
$var wire 1 - b $end
$var wire 1 ; c $end
$var wire 1 = s $end
$upscope $end
$scope module ha2 $end
$var wire 1 . a $end
$var wire 1 = b $end
$var wire 1 < c $end
$var wire 1 : s $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0=
0<
0;
0:
09
08
07
06
05
14
13
02
01
00
0/
0.
0-
1,
0+
0*
b0 )
1(
0'
0&
0%
b0 $
0#
0"
0!
$end
#5
1:
19
1=
1-
0,
11
1%
1+
#10
0-
1*
1,
01
0(
1/
0%
0+
1#
1'
#15
1"
15
0:
1!
18
0=
1;
1-
0,
11
1%
1+
#20
0"
0!
08
09
0;
05
0-
0*
06
1,
01
1(
0/
0%
0+
0#
0'
b1 $
b1 )
#25
1"
16
1:
19
1=
1-
0,
11
1%
1+
#30
0-
1*
1,
01
0(
1/
0%
0+
1#
1'
#35
0:
1!
18
0=
1;
1-
0,
11
1%
1+
#40
0!
08
09
0;
0"
0-
0*
06
1,
01
1(
0/
0%
0+
0#
0'
b10 $
b10 )
#45
1"
17
1:
19
1=
1-
0,
11
1%
1+
#50
0-
1*
1,
01
0(
1/
0%
0+
1#
1'
#55
0"
07
0:
1!
18
0=
1;
1-
0,
11
1%
1+
#60
1<
1!
08
1=
0;
0"
0*
07
03
12
1,
01
1(
0/
0:
0%
0+
0#
0'
1&
1.
b110 $
b110 )
#65
1"
17
0!
1:
0<
09
0=
0-
02
0,
1%
1+
#70
1"
17
1!
18
1;
1:
0<
1-
19
0=
12
1*
1,
0(
1/
0%
0+
1#
1'
#75
0"
07
0:
1<
1!
08
1=
0;
0-
02
0,
1%
1+
#80
18
0=
1;
1"
1-
16
12
1!
04
10
1,
1(
0/
0:
0<
0%
0+
0#
0'
0&
0.
b1101 $
b1101 )
#85
1:
0!
08
1=
0;
0-
02
0,
1%
1+
#90
1-
0*
12
00
1,
0(
0%
0+
1#
1'
#95
0"
06
0:
09
0=
0-
02
0,
1%
1+
#100
1"
15
1!
18
19
1;
1-
1*
12
10
1,
1(
0%
0+
0#
0'
b1100 $
b1100 )
#105
0"
05
1:
0!
08
1=
0;
0-
02
0,
1%
1+
#110
1-
0*
12
00
1,
0(
0%
0+
1#
1'
#115
0:
09
0=
0-
02
0,
1%
1+
#120

$date
	Mon Oct 15 16:14:42 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb5 $end
$var wire 4 ! result [3:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 1 $ cin $end
$scope module A $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 4 ' c [3:0] $end
$var wire 1 ( cin $end
$var wire 4 ) cout [3:0] $end
$var wire 4 * result [3:0] $end
$scope module A $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 ( c $end
$var wire 1 - c1 $end
$var wire 1 . ca $end
$var wire 1 / co $end
$var wire 1 0 sum1 $end
$var wire 1 1 sumo $end
$scope module A $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 / co $end
$var wire 1 1 sum $end
$upscope $end
$scope module B $end
$var wire 1 1 a $end
$var wire 1 ( b $end
$var wire 1 - co $end
$var wire 1 0 sum $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$scope module A $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 c $end
$var wire 1 5 c1 $end
$var wire 1 6 ca $end
$var wire 1 7 co $end
$var wire 1 8 sum1 $end
$var wire 1 9 sumo $end
$scope module A $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 7 co $end
$var wire 1 9 sum $end
$upscope $end
$scope module B $end
$var wire 1 9 a $end
$var wire 1 4 b $end
$var wire 1 5 co $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk01 $end
$scope module A $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < c $end
$var wire 1 = c1 $end
$var wire 1 > ca $end
$var wire 1 ? co $end
$var wire 1 @ sum1 $end
$var wire 1 A sumo $end
$scope module A $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 ? co $end
$var wire 1 A sum $end
$upscope $end
$scope module B $end
$var wire 1 A a $end
$var wire 1 < b $end
$var wire 1 = co $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk001 $end
$scope module A $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D c $end
$var wire 1 E c1 $end
$var wire 1 F ca $end
$var wire 1 G co $end
$var wire 1 H sum1 $end
$var wire 1 I sumo $end
$scope module A $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 G co $end
$var wire 1 I sum $end
$upscope $end
$scope module B $end
$var wire 1 I a $end
$var wire 1 D b $end
$var wire 1 E co $end
$var wire 1 H sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
b0 )
0(
b0 '
b0 &
b0 %
0$
b0 #
b0 "
b0 !
$end
#1
1F
1E
1D
1>
1=
1<
16
15
14
1.
b1111 )
1-
08
0@
0H
11
19
1A
1I
1,
13
1;
1C
b1111 '
00
b0 !
b0 *
1$
1(
#3
0<
0D
04
06
0>
0F
0.
b0 )
08
05
0@
0=
0H
0E
09
0A
0I
0,
03
0;
0C
11
0/
b0 '
10
b1 !
b1 *
0-
1+
0$
0(
b1 "
b1 %
#5
1D
1>
1=
1<
16
0@
1F
17
1A
1G
14
18
1H
1,
13
1;
1C
1.
b1111 )
09
0I
11
b1111 '
00
b1010 !
b1010 *
1-
12
1B
0+
1$
1(
b1010 "
b1010 %
#7
0H
0D
0>
1@
0=
08
01
0A
04
0,
0;
0.
b1010 )
b1010 '
00
b100 !
b100 *
0-
0$
0(
b1010 #
b1010 &
#9
0@
1H
0F
0<
1I
0G
08
06
b0 )
03
0C
09
07
b0 '
10
b1001 !
b1001 *
02
1$
1(
b1111 #
b1111 &
b1000 "
b1000 %
#15

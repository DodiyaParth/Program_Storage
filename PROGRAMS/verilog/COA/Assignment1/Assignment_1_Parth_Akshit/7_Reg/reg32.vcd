$date
	Mon Oct 15 22:34:44 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module reg32_tb $end
$var wire 32 ! Q [31:0] $end
$var reg 32 " D [31:0] $end
$var reg 1 # clk $end
$var reg 1 $ rst $end
$scope module m1 $end
$var wire 32 % D [31:0] $end
$var wire 32 & Q [31:0] $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$scope module d0 $end
$var wire 1 ) D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 * Q $end
$upscope $end
$scope module d1 $end
$var wire 1 + D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 , Q $end
$upscope $end
$scope module d2 $end
$var wire 1 - D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 . Q $end
$upscope $end
$scope module d3 $end
$var wire 1 / D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 0 Q $end
$upscope $end
$scope module d4 $end
$var wire 1 1 D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 2 Q $end
$upscope $end
$scope module d5 $end
$var wire 1 3 D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 4 Q $end
$upscope $end
$scope module d6 $end
$var wire 1 5 D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 6 Q $end
$upscope $end
$scope module d7 $end
$var wire 1 7 D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 8 Q $end
$upscope $end
$scope module d8 $end
$var wire 1 9 D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 : Q $end
$upscope $end
$scope module d9 $end
$var wire 1 ; D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 < Q $end
$upscope $end
$scope module d10 $end
$var wire 1 = D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 > Q $end
$upscope $end
$scope module d11 $end
$var wire 1 ? D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 @ Q $end
$upscope $end
$scope module d12 $end
$var wire 1 A D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 B Q $end
$upscope $end
$scope module d13 $end
$var wire 1 C D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 D Q $end
$upscope $end
$scope module d14 $end
$var wire 1 E D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 F Q $end
$upscope $end
$scope module d15 $end
$var wire 1 G D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 H Q $end
$upscope $end
$scope module d16 $end
$var wire 1 I D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 J Q $end
$upscope $end
$scope module d17 $end
$var wire 1 K D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 L Q $end
$upscope $end
$scope module d18 $end
$var wire 1 M D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 N Q $end
$upscope $end
$scope module d19 $end
$var wire 1 O D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 P Q $end
$upscope $end
$scope module d20 $end
$var wire 1 Q D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 R Q $end
$upscope $end
$scope module d21 $end
$var wire 1 S D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 T Q $end
$upscope $end
$scope module d22 $end
$var wire 1 U D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 V Q $end
$upscope $end
$scope module d23 $end
$var wire 1 W D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 X Q $end
$upscope $end
$scope module d24 $end
$var wire 1 Y D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 Z Q $end
$upscope $end
$scope module d25 $end
$var wire 1 [ D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 \ Q $end
$upscope $end
$scope module d26 $end
$var wire 1 ] D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 ^ Q $end
$upscope $end
$scope module d27 $end
$var wire 1 _ D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 ` Q $end
$upscope $end
$scope module d28 $end
$var wire 1 a D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 b Q $end
$upscope $end
$scope module d29 $end
$var wire 1 c D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 d Q $end
$upscope $end
$scope module d30 $end
$var wire 1 e D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 f Q $end
$upscope $end
$scope module d31 $end
$var wire 1 g D $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var reg 1 h Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
1'
bx &
bx %
x$
1#
bx "
bx !
$end
#2
1)
1+
1-
1/
11
13
15
17
19
1;
1=
1?
1A
1C
1E
1G
1I
1K
1M
1O
1Q
1S
1U
1W
1Y
1[
1]
1_
1a
1c
1e
1g
0$
0(
b11111111111111111111111111111111 "
b11111111111111111111111111111111 %
#3
1*
1,
1.
10
12
14
16
18
1:
1<
1>
1@
1B
1D
1F
1H
1J
1L
1N
1P
1R
1T
1V
1X
1Z
1\
1^
1`
1b
1d
1f
1h
b11111111111111111111111111111111 !
b11111111111111111111111111111111 &
0#
0'
#6
1#
1'
#8
0-
0/
03
05
07
09
0=
0?
0A
0C
0I
0K
0O
0U
0W
0Y
b11111110001101001100001000010011 "
b11111110001101001100001000010011 %
#9
0Z
0X
0V
0P
0L
0J
0D
0B
0@
0>
0:
08
06
04
00
0.
b11111110001101001100001000010011 !
b11111110001101001100001000010011 &
0#
0'
#11
0*
0,
02
0<
0F
0H
0N
0R
0T
0\
0^
0`
0b
0d
0f
0h
b0 !
b0 &
1$
1(
#12
1#
1'
#14
0)
01
0;
0E
0G
0M
0Q
0S
0[
0]
0_
0a
0c
0e
0g
0$
0(
b10 "
b10 %
#15
1,
b10 !
b10 &
0#
0'
#18
1#
1'

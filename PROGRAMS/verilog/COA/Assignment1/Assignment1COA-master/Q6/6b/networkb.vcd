$date
	Mon Oct 16 23:06:09 2017
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbench $end
$var wire 4 ! aoutput [3:0] $end
$var wire 4 " boutput [3:0] $end
$var reg 4 # ainput [3:0] $end
$var reg 1 $ binput $end
$var integer 32 % i [31:0] $end
$var reg 16 & randomnumber [15:0] $end
$scope module inst1 $end
$var wire 1 ' binput $end
$var reg 4 ( boutput [3:0] $end
$upscope $end
$scope module inst2 $end
$var wire 4 ) ainput [3:0] $end
$var reg 4 * aoutput [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx *
bx )
b1111 (
0'
bx &
b1 %
0$
bx #
b1111 "
bx !
$end
#100
b100 &
#140
b10 %
b1111 *
b1111 !
b1111 #
b1111 )
1$
1'
#240
b1 &
#250
b11 %
0$
0'
#350
b1001 &
#440
b100 %
1$
1'
#540
b11 &
#570
b101 %
0$
0'
#670
b1101 &
#800
b110 %
1$
1'
